///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// Your custom recording code should go in this file.
// The designer will only add methods to this file, so your custom code won't be overwritten.
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Repository;
using Ranorex.Core.Testing;

namespace ExcelDatadriveLoopAndCapture
{
    public partial class Recording1
    {
        /// <summary>
        /// This method gets called right after the recording has been started.
        /// It can be used to execute recording specific initialization code.
        /// </summary>
        private void Init()
        {
            // Your recording specic initialization code goes here. 

			

        }

        public void CaptureArticles(Ranorex.Adapter postsContainer)
        {	
        	//Get the RXPath of the passed OR element
        	var element = postsContainer.GetPath().ToString();
        	
        	
        	int x = 1; //Incremented at the end of the following do loop. If x>1 clcik Next
        	int rowcount = 1; //Keeps tract of rows to be written to Excel. Start at 1.
        	
        	//Loop to capture articles
        	do{
        		//For first do loop iteration x=1, so we will not click "Next"
        		if(x>1){
        			repo.EdgewordsTrainingAutomatedSoftware.Next.Click();
        			repo.EdgewordsTrainingAutomatedSoftware.Self.WaitForDocumentLoaded();  			
        		}
        	
        		postsContainer.EnsureVisible();
        	
        		//IList<Ranorex.ArticleTag> IArticles = postsContainer.As<Ranorex.DivTag>().FindDescendants<Ranorex.ArticleTag>();
        		//Generate list of articles inside passed OR item. The above approach failed (presumably the element becomes
        		//stale after navigating to the next set of results
        		IList<Ranorex.ArticleTag> IArticles = Host.Local.Find<Ranorex.ArticleTag>(element + "//article",5000);
       	
	        	Ranorex.Report.Log(ReportLevel.Info,"There are " + IArticles.Count + " on this page");
	        	
	        	// Collect article headers
	        	foreach (Ranorex.ArticleTag articles in IArticles) {
	        		string articleheader = articles.FindDescendant<Ranorex.ATag>().InnerText;
	        		Ranorex.Report.Info("article",articleheader);
	        		writedata(articleheader,rowcount); //Call helper method to write to Excel
	        		rowcount++;
	        	}
	        	
	        	x++; //Increment X so on next loop the "Next" button is clicked
	        	
	        	}
        		while(repo.EdgewordsTrainingAutomatedSoftware.NextInfo.Exists(3000));// Only loop if there is a "Next" button	
        }

        
        public void writedata(string datatowrite, int row)
        {
        	//-------------------------
        	// Excel example - remember to add the micorosft.interop.excel reference to the project!
        	//-------------------------
        	//String xlPath = @"C:\Users\edgewords\Documents\Ranorex\RanorexStudio Projects\ExcelDatadriveLoopAndCapture\ExcelDatadriveLoopAndCapture\TestData\data.xlsx";  
        	// -- or a relative path to from the bin/debug folder:
        	String xlPath = TestSuite.WorkingDirectory + @"\..\..\TestData\data.xlsx";
        	
			Microsoft.Office.Interop.Excel.Application xlApp = new Microsoft.Office.Interop.Excel.Application();  
			Microsoft.Office.Interop.Excel.Workbook xlBook = xlApp.Workbooks.Open(xlPath);  
			Microsoft.Office.Interop.Excel.Worksheet xlSheet = (Microsoft.Office.Interop.Excel.Worksheet)xlBook.Worksheets["Sheet2"];  
			
			xlApp.DisplayAlerts = false; 
			
			//Excel.Range xlrange = (Excel.Range)xlSheet.Cells[2,2];
			//int[] intArray = new int[] { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 };  
			//Range rng = xlApp.get_Range("A1", "J1");  
			//rng.Value = intArray;  
			
			// -- Write data to next row, find out the current data driven row we are on from Ranorex 
			// -- & tranform that to the column
			// -- add a row as row 1 in excel is the ranorex column headings!
			xlSheet.Cells[row + 1, TestSuite.CurrentTestContainer.DataContext.CurrentRowIndex] = datatowrite;
			// -- you can also use cell references such as 'A2'
			//xlSheet.Cells(C1)="hello";
			xlBook.Save();  
			xlBook.Close(); 
        	
			// I was hoping this would stop the message you get to reload the data after a test run as the 
			// spreadsheet has changed as we wrote to it, but doesn't seem to work:
			//TestSuite.CurrentTestContainer.DataContext.ReloadData();
        }
        
    }
}
